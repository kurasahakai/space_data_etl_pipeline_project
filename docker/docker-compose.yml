version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: postgres
    restart: always
    env_file:
      - ../.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d

  airflow:
    image: apache/airflow:2.7.2-python3.9
    container_name: airflow
    restart: always
    depends_on:
      - postgres
    env_file:
      - ../.env
    environment:
      - _PIP_ADDITIONAL_REQUIREMENTS=sqlalchemy<2.0
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - PYTHONPATH="${PYTHONPATH}:/opt/airflow/src"
    volumes:
      - ../dags:/opt/airflow/dags
      - ../data:/opt/airflow/data
      - ../src:/opt/airflow/src
    ports:
      - "8080:8080"
    command: >
      bash -c "
        airflow db migrate &&
        airflow users create --username admin --password admin --firstname Devid --lastname Mazzaferro --role Admin --email admin@example.com &&
        airflow webserver
      "

  scheduler:
    image: apache/airflow:2.7.2-python3.9
    container_name: airflow_scheduler
    restart: always
    depends_on:
      - postgres
      - airflow
    env_file:
      - ../.env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - PYTHONPATH=/opt/airflow
    volumes:
      - ../dags:/opt/airflow/dags
      - ../data:/opt/airflow/data
      - ./logs:/opt/airflow/logs
      - ../src:/opt/airflow/src
    command: >
      bash -c "airflow scheduler"

  fastapi:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: fastapi
    ports:
      - "8001:8001"
    depends_on:
      - postgres
    env_file:
      - ../.env
    environment:
      - PYTHONPATH="${PYTHONPATH}:/app"
    volumes:
      - ../src:/app/src
      - ../requirements.txt:/app/requirements.txt

volumes:
  pgdata:
